/*! jsroller 2014-10-12; Copyright 2014 Adrian Toncean; released under the MIT license */
(function () {
	"use strict";
	var _ = {
		$: 'call',
		$_: 'prototype',
		$$: 'add',
		$__: 'find',
		$_$: 'isEmpty',
		$$_: 'roller',
		$$$: 'Emp',
		$___: 'List',
		$__$: 'value',
		$_$_: 'next',
		$_$$: 'obfuscate',
		$$__: 'getLevelInfo',
		$$_$: 'isArray',
		$$$_: 'forEach',
		$$$$: 'keys',
		$____: 'type',
		$___$: 'id',
		$__$_: 'name',
		$__$$: 'push',
		$_$__: 'params',
		$_$_$: 'body',
		$_$$_: 'declarations',
		$_$$$: 'map',
		$$___: 'computed',
		$$__$: 'raw',
		$$_$_: 'newName',
		$$_$$: 'has',
		$$$__: 'get',
		$$$_$: 'newProperty',
		$$$$_: 'size',
		$$$$$: 'set',
		$_____: 'headers',
		$____$: 'wrap',
		$___$_: 'stringBuilderType',
		$___$$: 'parse',
		$__$__: 'generate',
		$__$_$: 'varsMap',
		$__$$_: 'localVars',
		$__$$$: 'varIds',
		$_$___: 'memberExpressions',
		$_$__$: 'literalEntries',
		$_$_$_: 'functions',
		$_$_$$: 'prefix',
		$_$$__: 'parent',
		$_$$_$: 'key',
		$_$$$_: 'property',
		$_$$$$: 'getUnaryBuilder',
		$$____: 'getBinaryBuilder',
		$$___$: 'length',
		$$__$_: 'floor',
	};
	var __ = {
		$: null,
		$_: 0,
		$$: 1,
		$__: "object",
		$_$: "FunctionDeclaration",
		$$_: "FunctionExpression",
		$$$: "id",
		$___: "VariableDeclaration",
		$__$: "property",
		$_$_: "MemberExpression",
		$_$$: "Literal",
		$$__: "Property",
		$$_$: "key",
		$$$_: "Identifier",
		$$$$: "var _ = {\n",
		$____: "};",
		$___$: "    ",
		$__$_: ": '",
		$__$$: "',\n",
		$_$__: "var __ = {\n",
		$_$_$: ": ",
		$_$$_: ",\n",
		$_$$$: "var ____ = {\n",
		$$___: "Unary",
		$$__$: "get",
		$$_$_: "Builder",
		$$_$$: 5,
		$$$__: "",
		$$$_$: "\n",
		$$$$_: "var ___ = window;\n",
		$$$$$: "(function () {\n",
		$_____: "\n})();",
		$____$: "_",
		$___$_: "__",
		$___$$: "___",
		$__$__: "____",
		$__$_$: "arguments",
		$__$$_: "name",
		$__$$$: "window",
		$_$___: 2,
		$_$__$: "$",
	};
	var ___ = window;
	var ____ = {
		$: 'Array',
		$_: 'Object',
		$$: 'Set',
		$__: 'Map',
		$_$: 'roller',
		$$_: 'esprima',
		$$$: 'escodegen',
		$___: 'Math',
	};
	(function () {
		var $$_, $$$, $___, $__$;
		$$_ = {
			add: function ($$_) {
				return new $$$($$_);
			},
			find: function () {
				return __.$;
			},
			isEmpty: function () {
				return !__.$_;
			}
		}, $$$ = function ($$$, $___) {
			this[_.$__$] = $$$, this[_.$_$_] = __.$ != $___ ? $___ : $$_;
		}, $$$[_.$_][_.$$] = function ($$_) {
			return new $$$($$_, this);
		}, $$$[_.$_][_.$__] = function ($$_) {
			return $$_(this[_.$__$]) ? this : this[_.$_$_][_.$__]($$_);
		}, $$$[_.$_][_.$_$] = function () {
			return !__.$$;
		}, __.$ == ___[_.$$_] && (___[_.$$_] = {}), __.$ == ($___ = ___[_.$$_])[_.$$$] && ($___[_.$$$] = $$_), __.$ == ($__$ = ___[_.$$_])[_.$___] && ($__$[_.$___] = $$$);
	}[_.$](this), function () {
		var $$_, $$$, $___, $__$, $_$_, $_$$, $$__, $$_$, $$$_, $$$$, $____;
		$$$_ = function ($$_) {
			var $$$, $___;
			return $$$ = function ($$$, $__$, $_$_, $_$$) {
				var $$__, $$_$;
				$$_$ = __.$, $$__ = !__.$_, $$_$ = $$_($$$, $__$, $_$_, $_$$, function ($$_) {
					return $$_$ = $$_;
				}, function ($$_) {
					return $$__ = $$_;
				}), $$__ && $___($$$, $$_$);
			}, $___ = function ($$_, $___) {
				return ___[____.$][_.$$_$]($$_) ? $$_[_.$$$_](function ($__$, $_$_) {
					$$$($__$, $$_, $_$_, $___);
				}) : $$_ && __.$__ == typeof $$_ ? ___[____.$_][_.$$$$]($$_)[_.$$$_](function ($__$) {
					$$$($$_[$__$], $$_, $__$, $___);
				}) : void __.$_;
			};
		}, $_$$ = function ($$_) {
			var $$$, $___, $__$, $_$_, $_$$, $$__, $$_$;
			return $___ = function ($$_) {
				return $$_[_.$_$$_][_.$_$$$](function ($$_) {
					return $$_[_.$___$][_.$__$_];
				});
			}, $_$_ = new ___[____.$$](), $$_$ = [], $$__ = [], $__$ = [], $$$ = [], $_$$ = function ($$_, $_$$, $$$_, $$$$, $____, $$__$) {
				var $$_$_;
				return __.$ == $$_ ? void $$__$(!__.$$) : void (__.$_$ === $$_[_.$____] || __.$$_ === $$_[_.$____] ? (__.$_$ === $$_[_.$____] && ($_$_[_.$$]($$_[_.$___$][_.$__$_]), $$_$[_.$__$$]({
					parent: $$_,
					key: __.$$$,
					name: $$_[_.$___$][_.$__$_]
				})), $$$[_.$__$$]($$_), $$__$(!__.$$)) : __.$___ === $$_[_.$____] ? ($$_$_ = $___($$_), $$_$_[_.$$$_](function ($$_) {
					$_$_[_.$$]($$_);
				})) : __.$__$ !== $$$_ || __.$_$_ !== $_$$[_.$____] || $_$$[_.$$___] ? __.$_$$ !== $$_[_.$____] || __.$$__ === $_$$[_.$____] && __.$$_$ === $$$_ ? __.$$$_ !== $$_[_.$____] || __.$$__ === $_$$[_.$____] && __.$$_$ === $$$_ || $$_$[_.$__$$]({
					parent: $_$$,
					key: $$$_,
					name: $$_[_.$__$_]
				}) : $__$[_.$__$$]({
					parent: $_$$,
					key: $$$_,
					value: $$_[_.$$__$]
				}) : $$__[_.$__$$]($_$$));
			}, (__.$_$ === $$_[_.$____] || __.$$_ === $$_[_.$____]) && (__.$$_ === $$_[_.$____] && __.$ != $$_[_.$___$] && ($_$_[_.$$]($$_[_.$___$][_.$__$_]), $$_$[_.$__$$]({
				parent: $$_,
				key: __.$$$,
				name: $$_[_.$___$][_.$__$_]
			})), $$_[_.$_$__][_.$$$_](function ($$$, $___) {
				$_$_[_.$$]($$$[_.$__$_]), $$_$[_.$__$$]({
					parent: $$_[_.$_$__],
					key: $___,
					name: $$$[_.$__$_]
				});
			})), $$$_($_$$)(__.$_$ === $$_[_.$____] || __.$$_ === $$_[_.$____] ? $$_[_.$_$_$] : $$_), {
				localVars: $_$_,
				varIds: $$_$,
				memberExpressions: $$__,
				literalEntries: $__$,
				functions: $$$
			};
		}, $_$_ = function ($$_) {
			var $$$;
			return $$$ = __.$$$$, $$_[_.$$$_](function ($$_, $___) {
				$$$ += __.$___$ + $$_[_.$$_$_] + __.$__$_ + $___ + __.$__$$;
			}), $$$ += __.$____;
		}, $___ = function ($$_) {
			var $$$;
			return $$$ = __.$_$__, $$_[_.$$$_](function ($$_, $___) {
				$$$ += __.$___$ + $$_[_.$$_$_] + __.$_$_$ + $___ + __.$_$$_;
			}), $$$ += __.$____;
		}, $$_ = function ($$_) {
			var $$$;
			return $$$ = __.$_$$$, $$_[_.$$$_](function ($$_, $___) {
				$$$ += __.$___$ + $$_[_.$$_$_] + __.$__$_ + $___ + __.$__$$;
			}), $$$ += __.$____;
		}, $$$ = function ($$_) {
			return {
				type: __.$$$_,
				name: $$_
			};
		}, $__$ = function ($$_, $$$, $___) {
			return __.$ == $___ && ($___ = !__.$$), {
				type: __.$_$_,
				computed: $___,
				object: $$_,
				property: $$$
			};
		}, $$__ = function ($$_, $$$) {
			var $___, $__$;
			return $___ = new ___[____.$__](), $__$ = function ($__$) {
				var $_$_, $_$$;
				return $___[_.$$_$$]($__$) ? $___[_.$$$__]($__$)[_.$$$_$] : ($_$_ = $$$($___[_.$$$$_] + __.$$), $_$$ = $$_($_$_), $___[_.$$$$$]($__$, {
					newName: $_$_,
					newProperty: $_$$
				}), $_$$);
			}, [
				$___,
				$__$
			];
		}, $$_$ = function ($$_$, $$$_) {
			var $$$$, $____, $___$, $__$_, $__$$, $_$__, $_$_$, $_$$_, $_$$$, $$___, $$__$, $$_$_, $$_$$, $$$__, $$$_$, $$$$_, $$$$$, $_____;
			return __.$ == $$$_ && ($$$_ = {}), __.$ == $$$_[_.$_____] && ($$$_[_.$_____] = !__.$_), __.$ == $$$_[_.$____$] && ($$$_[_.$____$] = !__.$$), __.$ == $$$_[_.$___$_] && ($$$_[_.$___$_] = __.$$___), $____ = function ($$_, $$$, $___) {
				var $__$, $_$_;
				return $_$_ = new ___[____.$__](), $__$ = __.$_, $$_[_.$$$_](function ($$_) {
					var $_$$;
					$_$$ = $$$[_.$__](function ($$$) {
						return $$$[_.$__$_$][_.$$_$$]($$_);
					}), __.$ != $_$$ ? $_$_[_.$$$$$]($$_, $_$$[_.$__$][_.$__$_$][_.$$$__]($$_)) : ($__$++, $_$_[_.$$$$$]($$_, $$$$($___ + $__$)));
				}), $_$_;
			}, $$$$ = ___[____.$_$][__.$$__$ + $$$_[_.$___$_] + __.$$_$_](), $$$$_ = $$__(function ($$_) {
				return $__$($$$(__.$____$), $$$($$_));
			}, $$$$), $_$$$ = $$$$_[__.$_], $$$__ = $$$$_[__.$$], $$$$$ = $$__(function ($$_) {
				return $__$($$$(__.$___$_), $$$($$_));
			}, $$$$), $_$__ = $$$$$[__.$_], $$_$$ = $$$$$[__.$$], $_____ = $$__(function ($$_) {
				return $__$($$$(__.$___$$), $__$($$$(__.$__$__), $$$($$_)), !__.$_);
			}, $$$$), $___$ = $_____[__.$_], $$_$_ = $_____[__.$$], $$__$ = function ($$_, $$$) {
				var $___, $__$, $_$_, $$__, $$_$, $$$_, $$$$, $___$;
				$___$ = $_$$($$_), $_$_ = $___$[_.$__$$_], $$$_ = $___$[_.$__$$$], $$__ = $___$[_.$_$___], $__$ = $___$[_.$_$__$], $___ = $___$[_.$_$_$_], $$$$ = $____($_$_, $$$, $$$[_.$__$][_.$_$_$$]), $$_$ = $$$[_.$$]({
					varsMap: $$$$,
					prefix: $$$[_.$__$][_.$_$_$$] + $$$$[_.$$$$_]
				}), $$$_[_.$$$_](function ($$_) {
					var $$$, $___;
					$___ = $$_[_.$_$$__][$$_[_.$_$$_$]], (__.$__$_$ !== $___[_.$__$_] && __.$__$$_ !== $___[_.$__$_] || $$$$[_.$$_$$]($___[_.$__$_])) && ($$$ = $$_$[_.$__](function ($$_) {
						return $$_[_.$__$_$][_.$$_$$]($___[_.$__$_]);
					}), __.$ != $$$ ? $___[_.$__$_] = $$$[_.$__$][_.$__$_$][_.$$$__]($___[_.$__$_]) : __.$__$$$ === $___[_.$__$_] ? $___[_.$__$_] = __.$___$$ : $$_[_.$_$$__][$$_[_.$_$$_$]] = $$_$_($$_[_.$__$_]));
				}), $$__[_.$$$_](function ($$_) {
					$$_[_.$_$$$_] = $$$__($$_[_.$_$$$_][_.$__$_]), $$_[_.$$___] = !__.$_;
				}), $__$[_.$$$_](function ($$_) {
					$$_[_.$_$$__][$$_[_.$_$$_$]] = $$_$$($$_[_.$__$]);
				}), $___[_.$$$_](function ($$_) {
					$$__$($$_, $$_$);
				});
			}, $$$_$ = ___[____.$$_][_.$___$$]($$_$), $$__$($$$_$, ___[____.$_$][_.$$$][_.$$]({
				varsMap: new ___[____.$__](),
				prefix: __.$$_$$
			})), $_$$_ = ___[____.$$$][_.$__$__]($$$_$), $$$_[_.$_____] && ($$___ = $_$_($_$$$), $_$_$ = $___($_$__), $__$_ = $$_($___$), $__$$ = __.$$$__, $_$$$[_.$$$$_] && ($__$$ += __.$$$__ + $$___ + __.$$$_$), $_$__[_.$$$$_] && ($__$$ += __.$$$__ + $_$_$ + __.$$$_$), $__$$ += __.$$$$_, $___$[_.$$$$_] && ($__$$ += __.$$$__ + $__$_ + __.$$$_$), $_$$_ = $__$$ + $_$$_), $$$_[_.$____$] && ($_$$_ = __.$$$$$ + $_$$_ + __.$_____), $_$$_;
		}, __.$ == ___[_.$$_] && (___[_.$$_] = {}), __.$ == ($$$$ = ___[_.$$_])[_.$_$$] && ($$$$[_.$_$$] = $$_$), __.$ == ($____ = ___[_.$$_])[_.$$__] && ($____[_.$$__] = $_$$);
	}[_.$](this), function () {
		var $$_, $$$, $___, $__$;
		$$$ = function ($$_) {
			var $$$;
			return __.$ == $$_ && ($$_ = __.$$$__), $$$ = [$$_], function ($$_) {
				var $___, $__$, $$__, $$_$;
				if ($$_ < $$$[_.$$___$])
					return $$$[$$_];
				for ($___ = $$$[$$$[_.$$___$] - __.$$], $__$ = $$__ = $$_$ = $$$[_.$$___$]; $$_ >= $$_$ ? $$_ >= $$__ : $$__ >= $$_; $__$ = $$_ >= $$_$ ? ++$$__ : --$$__)
					$___ += __.$____$, $$$[$__$] = $___;
				return $___;
			};
		}, $$_ = function ($$_) {
			var $$$, $___;
			return __.$ == $$_ && ($$_ = __.$$$__), $___ = [__.$____$], $$$ = function ($$_) {
				var $$$;
				for ($$$ = __.$$$__; $$_;)
					$$$ = ($$_ % __.$_$___ ? __.$_$__$ : __.$____$) + $$$, $$_ = ___[____.$___][_.$$__$_]($$_ / __.$_$___);
				return $$$;
			}, function ($$_) {
				var $__$, $$_$, $$$_;
				if ($$_ < $___[_.$$___$])
					$___[$$_];
				else
					for ($__$ = $$_$ = $$$_ = $___[_.$$___$]; $$_ >= $$$_ ? $$_ >= $$_$ : $$_$ >= $$_; $__$ = $$_ >= $$$_ ? ++$$_$ : --$$_$)
						$___[$__$] = $$$($__$);
				return $___[$$_];
			};
		}, __.$ == ___[_.$$_] && (___[_.$$_] = {}), __.$ == ($___ = ___[_.$$_])[_.$_$$$$] && ($___[_.$_$$$$] = $$$), __.$ == ($__$ = ___[_.$$_])[_.$$____] && ($__$[_.$$____] = $$_);
	}[_.$](this));
})();